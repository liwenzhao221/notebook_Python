前情回顾

1. 进程池 Pool

   Pool()  生成进程池对象
   pool.apply_async()  添加进程池事件
   pool.close()  关闭进程池
   pool.join()  回收进程池

2. 进程间通信

   * 管道  Pipe()   fd.send()  fd.recv()
   * 消息队列  Queue() q.get()  q.put()
   * 共享内存  Value()  Array()
   * 信号量 ： Semaphore()  acquire()  release()

3. threading 创建线程

   * 一个进程中可以有多个线程
   * 线程可以使用多核资源，完成多任务共同执行
   * 线程也是一个运行过程，多个线程共享进程资源


练习： 使用多线程下载一个资源，每个线程下载其中的一部分

测试

Single cpu: 7.48097562789917
Single IO: 5.184824705123901

Thread cpu: 6.51981782913208
Thread IO: 6.259281396865845

Process cpu: 3.6677591800689697
Process io: 2.67022705078125

作业 : 1. 重点代码 自己会写
      2. 自己写完基于 Process的多进程并发
      3. 进程线程自己总结













