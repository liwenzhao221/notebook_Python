MySQL语法总结

库基本操作
	查看已有库
		show databases；
	创建库（指定字符集）
		create database 库名 [character set utf8];
	查看创建库的语句
		show create database 库名
	查看当前所在库
		select database();
	切换库
		use 库名
	删除库
		drop database 库名
	库的命名规则
		1.数字，字母，下划线，但不能使用纯数字
		2.库名区分字母大小写
		3.不能使用特殊字符和mysql关键字
	支持数据类型
		整数类型（精确值）-INTEGER-4字节，INT-4字节，SMALLINT-2字节，TINYINT-1字节，MEDIUMINT-3字节，BIGINT-8字节
		定点类型（精确值）-DECIMAL-DECIMAL(M,D)
		浮点类型（近似值）-FLOAT-4字节，DOUBLE-8字节
		比特值类型-BIT
		#DECIMAL(M,D):
			M是数字的最大位数（精度）。范围1-65，M的默认值是10.
			D是小数点右侧数字的树木（标度）。范围0-30，不能超过M
			e.g DECIMAL(6,2)最多存6位数字，小数点后占两位，取值范围：-9999.99-9999.99
		比特值类型指0,1表达两种情况，如真，假
	字符串类型：
		CHAR 0-255字节 定长字符串，VARCHAR 0-65535字节 变长字符串
		BLOB 0-65535字节 二进制形式长文本，TEXT 0-65535字节 长文本数据
		ENUM存储给出的一个值，SET存储给出的值中一个或多个值

表的基本操作
	创建表
		create table 表名(
		字段名 数据类型，
		...
		)
		数字无符号加unsigned
		非空加not null
		默认值加default
		自增属性加AUTO_INCREMENT
		关键字加PRIMARY KEY
	查看
		查看数据表
			show tablesl;
		查看已有表的字符集
			show create table 表名；
		查看表结构
			desc 表名；
		删除表
			drop table 表名；
数据基本操作
	插入
		insert into 表名 values(值1)，(值2).....;
		insert into 表名(字段1，.....) values(值1)，....

	查询
		select *from 表名；
		select name,age from 表名；
	where子句
		算数运算符
		+ - * / %
		比较运算符
			太基础的大于、小于、等于、大于等于、小于等于、不等于就不一一列举了
			BETWEEN x and x
			NOT BETWEEN x and x
			IN 在集合中
			NOT IN 不在集合中
			<=>严格比较两个NULL值是否相等-两个操作码均为NULL时，其做的值为1；而当一个操作码为NULL时，其所得值为0
			LIKE 模糊匹配
			REGEXP 或 RLIKE 正则式匹配
			IS NULL 为空
			IS NOT NULL 不为空
			e.g.
				select * from class_1 where age > 8;
				select * from class_1 where between 8 and 10;
				select * from class_1 where age in (8,9);
		逻辑运算符
			NOT 或 ! 逻辑非
			AND 逻辑与
			OR 逻辑或
			XOR 逻辑异或
			e.g.
				select * from class_1 where sex='m' and age>9;
		位运算符
			& 按位与
			| 按位或
			^ 按位异或
			! 取反
			<< 左移
			>> 右移

	更新表记录
		update 表名 set 字段1=值1，字段2=值2，..... where 条件；

	删除表记录
		delete from 表名 where 条件；

	表字段的操作
		alter teble 表名 执行操作
			添加字段
				alter table 表名 add 字段名 数据类型；
				alter table 表名 add 字段名 数据类型 first；
				alter table 表名 add 字段名 数据类型 after 字段名
				e.g：
					alter table student add tel char(11) not null default('18210234186');
			删除字段
				alter table 表名 drop 字段名
				e.g
					 alter table student drop tel;
			修改数据类型
				alter table 表名 modify 字段名 新数据类型
				e.g
					alter table student modify age tinyint not null
			修改字段名
				alter table 表名 change 就字段名 新字段名 
				新数据类型；
				e.g
					alter table student change sex gender enum('m','w')
			表重命名
				alter table 表名 rename 新表名；
				e.g
					alter table student rename student_1


日期时间函数
	时间和日期类型
		DATE-3字节-YYYY-MM-DD-日期值 DATETIME-8字节-HH：MM：SS-混合日期和时间值 TIMESTAMP-4字节-YYYYMMDD HHMMSS-混合日期和时间值，时间戳
		TIME-3字节-HH：MM：SS-时间值或持续时间
		年份类型YEAR-1字节-YYYY-年份值

		date ："YYYY-MM-DD"
		time ："HH:MM:SS"
		datetime ："YYYY-MM-DD HH:MM:SS"
		timestamp ："YYYY-MM-DD HH:MM:SS"
		注意
		1、datetime ：以系统时间存储
		2、timestamp ：以标准时间存储但是查看时转换为系统时区，所以表现形式和datetime相同

	日期时间函数
		now() 返回服务器当前时间,格式对应datetime类型
		curdate() 返回当前日期，格式对应date类型
		curtime() 返回当前时间，格式对应time类型


	时间操作
		查找操作
			select * from marathon where birthday>='2000-01-01';
			select * from marathon where birthday>="2000-07-01" and performance<="2:30:00";
		日期时间运算
		语法格式
			select * from 表名 where 字段名 运算符 (时间-interval 时间间隔单位);
			时间间隔单位： 2 hour | 1 minute | 2 second | 2 year | 3 month | 1 day
			select * from marathon where registration_time > (now()-interval 7 day);
			select * from marathon where 成绩 > (time('03:00:00')-interval 30 minute)# 成绩大于两个半小时

高级查询语句
	模糊查询和正则查询
		LIKE用于在where子句中进行模糊查询，SQL LIKE 子句中使用百分号 %来表示任意0个或多个字符，
		下划线_表示任意一个字符。
		使用 LIKE 子句从数据表中读取数据的通用语法：
			SELECT field1, field2,...fieldN
			FROM table_name
			WHERE field1 LIKE condition1

			e.g.
			mysql> select * from class_1 where name like 'A%';

		mysql中对正则表达式的支持有限，只支持部分正则元字符
			SELECT field1, field2,...fieldN
			FROM table_name
			WHERE field1 REGEXP condition1
			e.g.
			select * from class_1 where name regexp '^B.+'

排序
	ORDER BY 子句来设定你想按哪个字段哪种方式来进行排序，再返回搜索结果。
	使用 ORDER BY 子句将查询数据排序后再返回数据：
		SELECT field1, field2,...fieldN from table_name1 where field1
		ORDER BY field1 [ASC [DESC]]
	默认情况ASC表示升序，DESC表示降序
		select * from class_1 where sex='m' order by age;

分页(限制)
	LIMIT 子句用于限制由 SELECT 语句返回的数据数量 或者 UPDATE,DELETE语句的操作数量
	带有 LIMIT 子句的 SELECT 语句的基本语法如下：
		SELECT column1, column2, columnN
		FROM table_name
		WHERE field
		LIMIT [num]

联合查询
	UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句
	会删除重复的数据。
	UNION 操作符语法格式
		SELECT expression1, expression2, ... expression_n
		FROM tables
		[WHERE conditions]
		UNION [ALL | DISTINCT]
		SELECT expression1, expression2, ... expression_n
		FROM tables
		[WHERE conditions];

		expression1, expression2, ... expression_n: 要检索的列。
		tables: 要检索的数据表。
		WHERE conditions: 可选， 检索条件。
		DISTINCT: 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，
		所以 DISTINCT 修饰符对结果没啥影响。
		ALL: 可选，返回所有结果集，包含重复数据。

		select * from class_1 where sex='m' UNION ALL select * from class_1 where age > 9;

数据备份
	1. 备份命令格式
		mysqldump -u用户名 -p 源库名 > ~/stu.sql
			--all-databases 备份所有库
			库名 备份单个库
			-B 库1 库2 库3 备份多个库
			库名 表1 表2 表3 备份指定库的多张表

	2. 恢复命令格式
		mysql -uroot -p 目标库名 < stu.sql
		从所有库备份中恢复某一个库(--one-database)
			mysql -uroot -p --one-database 目标库名 < all.sql