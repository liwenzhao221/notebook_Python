Python操作MySQL数据库
pymysql安装
	sudo pip3 install pymysql

pymysql使用流程
	1. 建立数据库连接(db = pymysql.connect(...))
	2. 创建游标对象(cur = db.cursor())
	3. 游标方法: cur.execute("insert ....")
	4. 提交到数据库或者获取数据 : db.commit()/db.fetchall()
	5. 关闭游标对象 ：cur.close()
	6. 断开数据库连接 ：db.close()

常用函数
	参考代码 day15/mysql.py
	参考代码 day15/read_db.py
	参考代码 day15/write_db.py
	
	db = pymysql.connect(参数列表)
	host ：主机地址,本地 localhost
	port ：端口号,默认3306
	user ：用户名
	password ：密码
	database ：库
	charset ：编码方式,推荐使用 utf8

	数据库连接对象(db)的方法
		cur = db.cursor() 返回游标对象,用于执行具体SQL命令
		db.commit() 提交到数据库执行
		db.rollback() 回滚，用于当commit()出错是回复到原来的数据形态
		db.close() 关闭连接

	游标对象(cur)的方法
		cur.execute(sql命令,[列表]) 执行SQL命令
		cur.fetchone() 获取查询结果集的第一条数据，查找到返回一个元组否则返回None
		cur.fetchmany(n) 获取前n条查找到的记录，返回结果为元组嵌套元组， ((记录1),(记录2))。
		cur.fetchall() 获取所有查找到的记录，返回结果形式同上。
		cur.close() 关闭游标对象
======================================================================
"""
read_db.py
数据库读操作示例  select
"""

import pymysql

# 连接数据库
db = pymysql.connect(host='localhost',
                     port=3306,
                     user='root',
                     password = '123456',
                     database = 'stu',
                     charset='utf8')

# 创建游标 (操作数据库语句,获取查询结果)
cur = db.cursor()

# 数据库操作
sql="select name,age from class_1 where sex='m';"
cur.execute(sql)

# 获取查询结果
one_row = cur.fetchone()
print(one_row) # 元组

many_row = cur.fetchmany(3)
print(many_row) # 元组套元组

all_row = cur.fetchall()
print(all_row) # 元组套元组

# 关闭游标和数据库
cur.close()
db.close()

======================================================================
"""
write_db.py
数据库写操作实例 (insert update delete)
"""

import pymysql

# 连接数据库
db = pymysql.connect(host='localhost',
                     port=3306,
                     user='root',
                     password = '123456',
                     database = 'stu',
                     charset='utf8')

# 创建游标 (操作数据库语句,获取查询结果)
cur = db.cursor()

# 数据库操作
try:
    # 具体写操作
    # name = input("Name:")
    # age = input("Age:")
    # sex = input("Sex:")
    # score = input("Score:")

    # 直接构建sql语句
    # sql="insert into class_1 (name,age,sex,score) \
    # values ('%s',%s,'%s',%s)"%(name,age,sex,score)
    # cur.execute(sql)

    # 通过execute第二个参数列表构建sql语句
    # sql = "insert into class_1 (name,age,sex,score) \
    #  values (%s,%s,%s,%s)"
    # cur.execute(sql,[name,age,sex,score])

    # 修改操作
    # sql = "update interest set price=12800 " \
    #       "where name='Tom'"
    # cur.execute(sql)

    # 删除操作
    sql = "delete from class_1 where score < 80"
    cur.execute(sql)

    db.commit()
except Exception as e:
    db.rollback() # 如果提交异常则回到提交前的状态
    print(e)

# 关闭游标和数据库
cur.close()
db.close()
============================================================
"""
图片存储
create table images (id int primary key auto_increment,filename varchar(32),image mediumblob);
"""
import pymysql

# 连接数据库
db = pymysql.connect(host='localhost',
                     port=3306,
                     user='root',
                     password = '123456',
                     database = 'stu',
                     charset='utf8')

# 创建游标 (操作数据库语句,获取查询结果)
cur = db.cursor()

# 存储图片
# with open('timg.jpeg','rb') as f:
#     data = f.read()
#
# try:
#     sql = "insert into images values (1,'jd',%s)"
#     cur.execute(sql,[data])
#     db.commit()
# except:
#     db.rollback()

# 提取图片
sql = "select image from images where filename='jd'"
cur.execute(sql)
data = cur.fetchone()
with open('jd.jpeg','wb') as f:
    f.write(data[0])

# 关闭游标和数据库
cur.close()
db.close()

====================================================================
"""
创建一个数据库 dict
create database dict charset=utf8;
创建一个表 words
将单词本中的单词插入表中
 id     word     mean
 create table words (id smallint primary key auto_increment,word varchar(28) not null,mean text);
"""

import pymysql
import re

f = open('dict.txt') # 打开文件

# 连接数据库
db = pymysql.connect(host='localhost',
                     port=3306,
                     user='root',
                     password = '123456',
                     database = 'dict',
                     charset='utf8')

# 创建游标 (操作数据库语句,获取查询结果)
cur = db.cursor()

# 数据库操作
sql = "insert into words (word,mean) values (%s,%s)"
# 一次读取一行
for line in f:
    tup = re.findall(r'(\S+)\s+(.*)',line)[0]
    try:
        cur.execute(sql,tup)
        db.commit()
    except:
        db.rollback()

f.close()
# 关闭游标和数据库
cur.close()
db.close()
===============================================================================
"""
模拟登录注册行为
     * 创建用户表user 存储用户
     create table user (id int primary key auto_increment,name varchar(32) not null,passwd char(8) not null);

     * 注册: 将注册信息存储到数据库,用户名不能重复
            基础信息包含用户名,密码

     * 登录: 判断用户名密码是否正确
"""

import pymysql

class Database:
    def __init__(self):
        # 连接数据库
        self.db = pymysql.connect(host='localhost',
                             port=3306,
                             user='root',
                             password = '123456',
                             database = 'stu',
                             charset='utf8')

        # 创建游标 (操作数据库语句,获取查询结果)
        self.cur = self.db.cursor()

    def close(self):
        # 关闭游标和数据库
        self.cur.close()
        self.db.close()

    def register(self,name,passwd):
        # 判断用户名
        sql = "select * from user where name='%s'"%name
        self.cur.execute(sql)
        resule = self.cur.fetchone()
        if resule:
            # 如果返回数据了，说明用户已经存在了，则返回false
            return False

        # 插入用户
        try:
            sql="insert into user (name,passwd) values (%s,%s)"
            self.cur.execute(sql,[name,passwd])
            self.db.commit()
            return True
        except:
            self.db.rollback()
            return False


    def login(self,name,passwd):
        sql = "select * from user where name='%s' and passwd='%s'"%(name,passwd)
        self.cur.execute(sql)
        result = self.cur.fetchone()
        if result:
            return True
        else:
            return False

if __name__ == '__main__':
    db = Database()
    while True:
        print("""
        ===============
        1. 注册  2. 登录
        ===============
        """)
        cmd = input("命令:")
        if cmd == '1':
            if db.register('张三','123'):
                print('注册成功')
                break
            else:
                print("注册失败")
        elif cmd == '2':
            if db.login('张三','123'):
                print('登录成功')
                break
            else:
                print("登录失败")
        else:
            print("做不到啊!!!")
