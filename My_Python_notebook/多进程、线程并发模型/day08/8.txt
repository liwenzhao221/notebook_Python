前情回顾

1. httpserver 1.0

2. 进程 ： 程序的执行过程，多任务编程手段

3. 进程的产生过程，进程的基本概念，进程状态

《计算机网络》 《操作系统原理》 《编译原理》

4. fork创建进程

5. 函数： getpid()  getppid()
         _exit()   exit()

6. 孤儿进程，僵尸进程

   * wait()
   * 二级子进程
   * signal

聊天室程序思路：

1. 需求分析 ：  达到什么样的目的，形成什么样的运行流程

    * 启动软件--> 输入姓名-->进入-->聊天（收发随意）-> 退出
             |    |
             ---不允许进入

2. 技术点的确定

   * 消息发送流程： client-->server->client

   * 网络选择 ： udp 进行数据传输

   * 存储内容： name  address
     {name:address,}
     [(name,address),]

   * 消息收发互不影响

     使用多进程，让消息发送接收各占一个进程

3. 结构和注意事项

   * 采用什么结构封装 ： 函数
   * 编写一个功能，测试一个功能
   * 注释

4. 功能模块分析

   * 网络搭建
        客户端 ： udp客户端
        服务端 ： udp服务端

   * 进入聊天室
        客户端 ： * 输入姓名
                 * 向服务器发送请求
                 * 接收结果
                 * 允许则进入聊天，不允许则重写输入姓名

        服务器 ： * 接受请求，区分请求类型
                 * 判断用户是否存在
                 * 如果允许进入，将其加入存储结构
                 * 通知其他用户，告知本人可以登录
                 * 如果不允许则结束，告知用户不可以进入

   * 聊天
        客户端 ： * 创建新的进程
                * 一个进程循环的发送消息
                * 一个进程循环的接收消息

        服务端 ： * 接收请求，判断请求类型
                 * 将消息转发给其他用户
                   xxx : xxxxxxxxx

   * 退出聊天室
        客户端 ： * 输入quit 或者 ctrl-c退出
                * 发送请求给服务端
                * 结束进程
        服务端 ： * 接收请求，判断请求类型
                 * 将退出消息发送给其他人
                 * 将用户从字典删除

   * 管理员消息

5. 协议设定

     请求格式：
        登录 ：  L name
        聊天 ：  C name text
        退出 ：  Q name

     响应格式：
        登录 ： 成功（OK） 失败（失败原因）
        退出 ： 给客户端发送 EXIT 让客户端接收进程退出

练习： 求100000以内所有的质数之和，
请分别使用单进程，4进程，10进程完成，然后记录每次
完成的时间

求和，使用sum()函数即可
记录时间使用装饰器即可


作业：1. 聊天室代码 周末梳理思路
     2. process 使用
     3. 使用两个子进程（process）分别复制
     一个文件的上下半部分，将内容各自复制到
     一个新的文件中。






