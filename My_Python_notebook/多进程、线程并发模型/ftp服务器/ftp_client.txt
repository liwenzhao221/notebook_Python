from socket import *
# 服务器地址
ADDR = ('',)

# 客户端文件处理类
class FTPClient
	'''
	客户端处理查看，上传，下载，退出
	'''
	def __init__(self,sockfd):
		self.sockfd = sockfd
	
	#获取文件库文件列表
	def do_list(self):
		self.sockfd.send(b'L')# 发送请求
		# 等待回复
		data = self.sockfd.recv(128).decode()
		if data = 'OK':
			#一次性接收文件字符串
			data = self.sockfd.recv(4096)
			print(data.decode())
		else:
			print(data)
	# 退出
	def do_quit(self):
		self.sockfd.send(b'Q') # 请求退出
		self.sockfd.close()
		sys.exit('谢谢使用')
	# 下载文件
	def do_get(self,filename):
		# 发送请求
		self.sockfd.send(('G '+filename).encode())
		# 等待回复
		data = self.sockfd.recv(128).decode()
		if data == 'OK':
			f = open(filename,'wb')
			# 循环接受写入文件
			while True:
				data  = self.confd.recv(1024)
				if data == b'##' # 发送特俗标记，发送完成
					break
				fd.write(data)
			f.close()

		else:
			print(data)


# 链接服务器
def main():
	sockfd = socket()
	try:
		sockfd.connect(ADDR)
	except Exception as e:
		print(e)
		return
	
	# 实例化对象，调用文件处理方法
	ftp = FTPClient(sockfd)# 因为后面都需要，所以就将套接字变成属性

	#循环发送请求
	while True:
		print('\n==========命令选择=============')
		print('*******           list         **************')
		...............
		print('*******          quit        **************')
		print('************************************')
		cmd = input('输入命令：')
		sockfd.send(cmd.encode())
		if cmd.strip() == 'list':
			ftp.do_list()# 参数，根据功能思考参数
		elif cmd.strip() == 'quit':
			ftp.do_quit()
		elif cmd[:3] == 'get':
			filename = cmd.strip().split(' ')[-1]
			ftp.do_get(filename)	
		else:
			print('请输入正确命令')



if __name__ == '__main__':
	main()